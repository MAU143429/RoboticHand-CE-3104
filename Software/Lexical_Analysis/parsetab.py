
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightLETrightASSIGNleftPLUSMINUSleftTIMESDIVIDEleftLPARENRPARENnonassocUMINUSARROW ASSIGN ASTR BOOLEAN BREAK COMMA DELAY DIVIDE DOTDOT ELSE ELSEIF EQEQ EXPR FALSE FN FOR GT GTE ID IF IN INT INTEGER LCRLBRACKET LET LOOP LPAREN LSQRBRACKET LT LTE MAIN MIL MIN MINUS MOVE OPERA PLUS PRINT QUOT RANGE RCRLBRACKET RETURN RPAREN RSQRBRACKET SEG SEMICOLON STRING TIMES TRUE WHILE WRONG_ID\n    root : main root\n         | function root\n         | procedure root\n         | let root\n         | empty\n    \n    functions : ID\n    \n    main : FN MAIN LPAREN RPAREN LCRLBRACKET line RCRLBRACKET\n    \n    line : loop line\n         | function line\n         | procedure line\n         | for line\n         | while line\n         | if line\n         | let line\n         | move line\n         | moveList line\n         | delay line\n         | println line\n         | break line\n         | empty\n    \n    procedure : FN ID LPAREN params RPAREN prodbody\n    \n    prodbody : LCRLBRACKET line RCRLBRACKET\n    \n    function : FN ID LPAREN params RPAREN funbody\n    \n    params : ID arg\n          | empty empty\n    \n    arg : COMMA params\n        | COMMA arg\n        | empty empty\n    \n    funbody : ARROW output LCRLBRACKET line end RCRLBRACKET\n    \n    output : INTEGER\n            | BOOLEAN\n    \n    end : RETURN expression SEMICOLON\n    \n    loop : LOOP LCRLBRACKET line RCRLBRACKET\n    \n    for : FOR ID IN INT DOTDOT INT LCRLBRACKET line RCRLBRACKET\n    \n    while : WHILE LPAREN expression compare expression RPAREN LCRLBRACKET line RCRLBRACKET\n          | WHILE TRUE LCRLBRACKET line RCRLBRACKET\n    \n    move : MOVE LPAREN STRING COMMA bool RPAREN SEMICOLON\n    \n    moveList : MOVE LPAREN LSQRBRACKET fingerList RSQRBRACKET COMMA bool RPAREN SEMICOLON\n    \n    fingerList : STRING COMMA STRING\n               | STRING COMMA fingerList\n    \n    delay : DELAY LPAREN INT COMMA STRING RPAREN SEMICOLON\n    \n    unit : QUOT MIN QUOT\n         | QUOT MIL QUOT\n         | QUOT SEG QUOT\n    \n    println : PRINT EXPR LPAREN args RPAREN SEMICOLON\n\n    \n    args : INT body\n         | ID body\n         | opera body\n         | TRUE body\n         | FALSE body\n         | STRING body\n\n    \n    body : COMMA args\n         | COMMA body\n         | empty empty\n    \n    text : QUOT ID QUOT\n    \n    elseiforelse : elseif\n                 | else\n    \n    if : IF expression compare expression LCRLBRACKET line RCRLBRACKET empty\n       | IF expression compare expression LCRLBRACKET line RCRLBRACKET elseiforelse\n    \n    elseif : ELSEIF expression compare expression LCRLBRACKET line RCRLBRACKET empty\n           | ELSEIF expression compare expression LCRLBRACKET line RCRLBRACKET elseiforelse\n    \n    else : ELSE LCRLBRACKET line RCRLBRACKET\n    \n    compare : EQEQ\n            | LTE\n            | GTE\n            | LT\n            | GT\n    \n    expression : INT\n               | TRUE\n               | FALSE\n               | opera\n               | ID\n               | negative\n    \n    let : LET ID ASSIGN operand SEMICOLON\n        | LET ID ASSIGN bool SEMICOLON\n    \n    opera : OPERA LPAREN operator COMMA operand COMMA operand RPAREN\n    \n    operator : PLUS\n             | MINUS\n             | DIVIDE\n             | ASTR\n             | TIMES\n    \n    operand : INT\n            | opera\n            | ID\n            | negative\n    \n    negative : MINUS INT %prec UMINUS\n    \n    bool : TRUE\n         | FALSE\n         | ID\n    \n    break : BREAK\n    \n    empty :\n    '
    
_lr_action_items = {'FN':([0,2,3,4,5,33,39,40,45,46,47,48,49,50,51,52,53,54,55,56,65,70,71,73,80,93,116,127,128,131,151,152,178,182,185,186,187,188,190,194,195,196,197,201,202,204,205,209,210,212,213,214,],[7,7,7,7,7,43,-74,-75,43,43,43,43,43,43,43,43,43,43,43,43,-90,-23,-21,43,-7,43,43,43,-22,-33,-36,43,-45,-29,43,43,-91,-37,-41,-58,-59,-56,-57,-34,-35,43,-38,-62,43,-91,-60,-61,]),'LET':([0,2,3,4,5,33,39,40,45,46,47,48,49,50,51,52,53,54,55,56,65,70,71,73,80,93,116,127,128,131,151,152,178,182,185,186,187,188,190,194,195,196,197,201,202,204,205,209,210,212,213,214,],[8,8,8,8,8,8,-74,-75,8,8,8,8,8,8,8,8,8,8,8,8,-90,-23,-21,8,-7,8,8,8,-22,-33,-36,8,-45,-29,8,8,-91,-37,-41,-58,-59,-56,-57,-34,-35,8,-38,-62,8,-91,-60,-61,]),'$end':([0,1,2,3,4,5,6,9,10,11,12,39,40,70,71,80,128,182,],[-91,0,-91,-91,-91,-91,-5,-1,-2,-3,-4,-74,-75,-23,-21,-7,-22,-29,]),'MAIN':([7,],[13,]),'ID':([7,8,17,18,35,43,59,61,95,112,117,118,119,120,121,122,126,133,136,148,160,168,174,198,206,],[14,15,20,23,20,14,94,102,102,130,102,-63,-64,-65,-66,-67,142,102,154,130,142,102,154,102,102,]),'LPAREN':([13,14,31,60,62,63,106,],[16,17,41,95,104,105,126,]),'ASSIGN':([15,],[18,]),'RPAREN':([16,17,20,21,22,26,27,28,29,30,34,35,36,38,42,66,67,68,69,98,99,100,101,102,103,107,130,140,141,142,143,144,145,146,150,153,154,157,159,160,161,162,163,164,165,166,169,179,180,181,184,189,],[19,-91,-91,37,-91,-82,-83,-85,-87,-88,-24,-91,-91,-25,-86,-26,-27,-91,-28,-68,-69,-70,-71,-72,-73,-25,-84,158,-91,-91,-91,-91,-91,-91,171,173,-89,177,-46,-91,-91,-47,-48,-49,-50,-51,184,-52,-53,-54,-76,200,]),'INT':([18,32,61,95,105,112,114,117,118,119,120,121,122,126,133,148,149,160,168,198,206,],[26,42,98,98,125,26,132,98,-63,-64,-65,-66,-67,141,98,26,170,141,98,98,98,]),'TRUE':([18,60,61,95,117,118,119,120,121,122,126,133,136,160,168,174,198,206,],[29,96,99,99,99,-63,-64,-65,-66,-67,144,99,29,144,99,29,99,99,]),'FALSE':([18,61,95,117,118,119,120,121,122,126,133,136,160,168,174,198,206,],[30,100,100,100,-63,-64,-65,-66,-67,145,100,30,145,100,30,100,100,]),'OPERA':([18,61,95,112,117,118,119,120,121,122,126,133,148,160,168,198,206,],[31,31,31,31,31,-63,-64,-65,-66,-67,31,31,31,31,31,31,31,]),'MINUS':([18,41,61,95,112,117,118,119,120,121,122,133,148,168,198,206,],[32,76,32,32,32,32,-63,-64,-65,-66,-67,32,32,32,32,32,]),'LCRLBRACKET':([19,37,42,58,96,98,99,100,101,102,103,108,109,110,135,170,171,184,199,208,],[33,73,-86,93,116,-68,-69,-70,-71,-72,-73,127,-30,-31,152,185,186,-76,204,210,]),'COMMA':([20,26,27,28,35,42,74,75,76,77,78,79,123,125,129,130,138,141,142,143,144,145,146,155,160,175,184,],[35,-82,-83,-85,35,-86,112,-77,-78,-79,-80,-81,136,139,148,-84,156,160,160,160,160,160,160,174,160,156,-76,]),'SEMICOLON':([23,24,25,26,27,28,29,30,42,98,99,100,101,102,103,158,173,177,183,184,200,],[-84,39,40,-82,-83,-85,-87,-88,-86,-68,-69,-70,-71,-72,-73,178,188,190,191,-76,205,]),'LOOP':([33,39,40,45,46,47,48,49,50,51,52,53,54,55,56,65,70,71,73,93,116,127,128,131,151,152,178,182,185,186,187,188,190,194,195,196,197,201,202,204,205,209,210,212,213,214,],[58,-74,-75,58,58,58,58,58,58,58,58,58,58,58,58,-90,-23,-21,58,58,58,58,-22,-33,-36,58,-45,-29,58,58,-91,-37,-41,-58,-59,-56,-57,-34,-35,58,-38,-62,58,-91,-60,-61,]),'FOR':([33,39,40,45,46,47,48,49,50,51,52,53,54,55,56,65,70,71,73,93,116,127,128,131,151,152,178,182,185,186,187,188,190,194,195,196,197,201,202,204,205,209,210,212,213,214,],[59,-74,-75,59,59,59,59,59,59,59,59,59,59,59,59,-90,-23,-21,59,59,59,59,-22,-33,-36,59,-45,-29,59,59,-91,-37,-41,-58,-59,-56,-57,-34,-35,59,-38,-62,59,-91,-60,-61,]),'WHILE':([33,39,40,45,46,47,48,49,50,51,52,53,54,55,56,65,70,71,73,93,116,127,128,131,151,152,178,182,185,186,187,188,190,194,195,196,197,201,202,204,205,209,210,212,213,214,],[60,-74,-75,60,60,60,60,60,60,60,60,60,60,60,60,-90,-23,-21,60,60,60,60,-22,-33,-36,60,-45,-29,60,60,-91,-37,-41,-58,-59,-56,-57,-34,-35,60,-38,-62,60,-91,-60,-61,]),'IF':([33,39,40,45,46,47,48,49,50,51,52,53,54,55,56,65,70,71,73,93,116,127,128,131,151,152,178,182,185,186,187,188,190,194,195,196,197,201,202,204,205,209,210,212,213,214,],[61,-74,-75,61,61,61,61,61,61,61,61,61,61,61,61,-90,-23,-21,61,61,61,61,-22,-33,-36,61,-45,-29,61,61,-91,-37,-41,-58,-59,-56,-57,-34,-35,61,-38,-62,61,-91,-60,-61,]),'MOVE':([33,39,40,45,46,47,48,49,50,51,52,53,54,55,56,65,70,71,73,93,116,127,128,131,151,152,178,182,185,186,187,188,190,194,195,196,197,201,202,204,205,209,210,212,213,214,],[62,-74,-75,62,62,62,62,62,62,62,62,62,62,62,62,-90,-23,-21,62,62,62,62,-22,-33,-36,62,-45,-29,62,62,-91,-37,-41,-58,-59,-56,-57,-34,-35,62,-38,-62,62,-91,-60,-61,]),'DELAY':([33,39,40,45,46,47,48,49,50,51,52,53,54,55,56,65,70,71,73,93,116,127,128,131,151,152,178,182,185,186,187,188,190,194,195,196,197,201,202,204,205,209,210,212,213,214,],[63,-74,-75,63,63,63,63,63,63,63,63,63,63,63,63,-90,-23,-21,63,63,63,63,-22,-33,-36,63,-45,-29,63,63,-91,-37,-41,-58,-59,-56,-57,-34,-35,63,-38,-62,63,-91,-60,-61,]),'PRINT':([33,39,40,45,46,47,48,49,50,51,52,53,54,55,56,65,70,71,73,93,116,127,128,131,151,152,178,182,185,186,187,188,190,194,195,196,197,201,202,204,205,209,210,212,213,214,],[64,-74,-75,64,64,64,64,64,64,64,64,64,64,64,64,-90,-23,-21,64,64,64,64,-22,-33,-36,64,-45,-29,64,64,-91,-37,-41,-58,-59,-56,-57,-34,-35,64,-38,-62,64,-91,-60,-61,]),'BREAK':([33,39,40,45,46,47,48,49,50,51,52,53,54,55,56,65,70,71,73,93,116,127,128,131,151,152,178,182,185,186,187,188,190,194,195,196,197,201,202,204,205,209,210,212,213,214,],[65,-74,-75,65,65,65,65,65,65,65,65,65,65,65,65,-90,-23,-21,65,65,65,65,-22,-33,-36,65,-45,-29,65,65,-91,-37,-41,-58,-59,-56,-57,-34,-35,65,-38,-62,65,-91,-60,-61,]),'RCRLBRACKET':([33,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,65,70,71,73,81,82,83,84,85,86,87,88,89,90,91,92,93,111,113,116,128,131,134,151,152,167,172,178,182,185,186,187,188,190,191,192,193,194,195,196,197,201,202,204,205,207,209,210,211,212,213,214,],[-91,-74,-75,80,-91,-91,-91,-91,-91,-91,-91,-91,-91,-91,-91,-91,-20,-90,-23,-21,-91,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-91,128,131,-91,-22,-33,151,-36,-91,182,187,-45,-29,-91,-91,-91,-37,-41,-32,201,202,-58,-59,-56,-57,-34,-35,-91,-38,209,-62,-91,212,-91,-60,-61,]),'ARROW':([37,],[72,]),'RETURN':([39,40,45,46,47,48,49,50,51,52,53,54,55,56,57,65,70,71,81,82,83,84,85,86,87,88,89,90,91,92,127,128,131,147,151,178,182,187,188,190,194,195,196,197,201,202,205,209,212,213,214,],[-74,-75,-91,-91,-91,-91,-91,-91,-91,-91,-91,-91,-91,-91,-20,-90,-23,-21,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-91,-22,-33,168,-36,-45,-29,-91,-37,-41,-58,-59,-56,-57,-34,-35,-38,-62,-91,-60,-61,]),'PLUS':([41,],[75,]),'DIVIDE':([41,],[77,]),'ASTR':([41,],[78,]),'TIMES':([41,],[79,]),'EQEQ':([42,97,98,99,100,101,102,103,115,184,203,],[-86,118,-68,-69,-70,-71,-72,-73,118,-76,118,]),'LTE':([42,97,98,99,100,101,102,103,115,184,203,],[-86,119,-68,-69,-70,-71,-72,-73,119,-76,119,]),'GTE':([42,97,98,99,100,101,102,103,115,184,203,],[-86,120,-68,-69,-70,-71,-72,-73,120,-76,120,]),'LT':([42,97,98,99,100,101,102,103,115,184,203,],[-86,121,-68,-69,-70,-71,-72,-73,121,-76,121,]),'GT':([42,97,98,99,100,101,102,103,115,184,203,],[-86,122,-68,-69,-70,-71,-72,-73,122,-76,122,]),'EXPR':([64,],[106,]),'INTEGER':([72,],[109,]),'BOOLEAN':([72,],[110,]),'IN':([94,],[114,]),'STRING':([104,124,126,139,156,160,],[123,138,146,157,175,146,]),'LSQRBRACKET':([104,],[124,]),'DOTDOT':([132,],[149,]),'RSQRBRACKET':([137,175,176,],[155,-39,-40,]),'ELSEIF':([187,212,],[198,198,]),'ELSE':([187,212,],[199,199,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'root':([0,2,3,4,5,],[1,9,10,11,12,]),'main':([0,2,3,4,5,],[2,2,2,2,2,]),'function':([0,2,3,4,5,33,45,46,47,48,49,50,51,52,53,54,55,56,73,93,116,127,152,185,186,204,210,],[3,3,3,3,3,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'procedure':([0,2,3,4,5,33,45,46,47,48,49,50,51,52,53,54,55,56,73,93,116,127,152,185,186,204,210,],[4,4,4,4,4,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'let':([0,2,3,4,5,33,45,46,47,48,49,50,51,52,53,54,55,56,73,93,116,127,152,185,186,204,210,],[5,5,5,5,5,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'empty':([0,2,3,4,5,17,20,22,33,35,36,45,46,47,48,49,50,51,52,53,54,55,56,68,73,93,116,127,141,142,143,144,145,146,152,160,161,185,186,187,204,210,212,],[6,6,6,6,6,22,36,38,57,68,69,57,57,57,57,57,57,57,57,57,57,57,57,107,57,57,57,57,161,161,161,161,161,161,57,161,181,57,57,194,57,57,213,]),'params':([17,35,],[21,66,]),'operand':([18,112,148,],[24,129,169,]),'bool':([18,136,174,],[25,153,189,]),'opera':([18,61,95,112,117,126,133,148,160,168,198,206,],[27,101,101,27,101,143,101,27,143,101,101,101,]),'negative':([18,61,95,112,117,133,148,168,198,206,],[28,103,103,28,103,103,28,103,103,103,]),'arg':([20,35,],[34,67,]),'line':([33,45,46,47,48,49,50,51,52,53,54,55,56,73,93,116,127,152,185,186,204,210,],[44,81,82,83,84,85,86,87,88,89,90,91,92,111,113,134,147,172,192,193,207,211,]),'loop':([33,45,46,47,48,49,50,51,52,53,54,55,56,73,93,116,127,152,185,186,204,210,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'for':([33,45,46,47,48,49,50,51,52,53,54,55,56,73,93,116,127,152,185,186,204,210,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'while':([33,45,46,47,48,49,50,51,52,53,54,55,56,73,93,116,127,152,185,186,204,210,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'if':([33,45,46,47,48,49,50,51,52,53,54,55,56,73,93,116,127,152,185,186,204,210,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'move':([33,45,46,47,48,49,50,51,52,53,54,55,56,73,93,116,127,152,185,186,204,210,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'moveList':([33,45,46,47,48,49,50,51,52,53,54,55,56,73,93,116,127,152,185,186,204,210,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'delay':([33,45,46,47,48,49,50,51,52,53,54,55,56,73,93,116,127,152,185,186,204,210,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'println':([33,45,46,47,48,49,50,51,52,53,54,55,56,73,93,116,127,152,185,186,204,210,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'break':([33,45,46,47,48,49,50,51,52,53,54,55,56,73,93,116,127,152,185,186,204,210,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'funbody':([37,],[70,]),'prodbody':([37,],[71,]),'operator':([41,],[74,]),'expression':([61,95,117,133,168,198,206,],[97,115,135,150,183,203,208,]),'output':([72,],[108,]),'compare':([97,115,203,],[117,133,206,]),'fingerList':([124,156,],[137,176,]),'args':([126,160,],[140,179,]),'body':([141,142,143,144,145,146,160,],[159,162,163,164,165,166,180,]),'end':([147,],[167,]),'elseiforelse':([187,212,],[195,214,]),'elseif':([187,212,],[196,196,]),'else':([187,212,],[197,197,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> root","S'",1,None,None,None),
  ('root -> main root','root',2,'p_root','SyntacticAnalizer.py',23),
  ('root -> function root','root',2,'p_root','SyntacticAnalizer.py',24),
  ('root -> procedure root','root',2,'p_root','SyntacticAnalizer.py',25),
  ('root -> let root','root',2,'p_root','SyntacticAnalizer.py',26),
  ('root -> empty','root',1,'p_root','SyntacticAnalizer.py',27),
  ('functions -> ID','functions',1,'p_functions','SyntacticAnalizer.py',32),
  ('main -> FN MAIN LPAREN RPAREN LCRLBRACKET line RCRLBRACKET','main',7,'p_main','SyntacticAnalizer.py',37),
  ('line -> loop line','line',2,'p_program','SyntacticAnalizer.py',43),
  ('line -> function line','line',2,'p_program','SyntacticAnalizer.py',44),
  ('line -> procedure line','line',2,'p_program','SyntacticAnalizer.py',45),
  ('line -> for line','line',2,'p_program','SyntacticAnalizer.py',46),
  ('line -> while line','line',2,'p_program','SyntacticAnalizer.py',47),
  ('line -> if line','line',2,'p_program','SyntacticAnalizer.py',48),
  ('line -> let line','line',2,'p_program','SyntacticAnalizer.py',49),
  ('line -> move line','line',2,'p_program','SyntacticAnalizer.py',50),
  ('line -> moveList line','line',2,'p_program','SyntacticAnalizer.py',51),
  ('line -> delay line','line',2,'p_program','SyntacticAnalizer.py',52),
  ('line -> println line','line',2,'p_program','SyntacticAnalizer.py',53),
  ('line -> break line','line',2,'p_program','SyntacticAnalizer.py',54),
  ('line -> empty','line',1,'p_program','SyntacticAnalizer.py',55),
  ('procedure -> FN ID LPAREN params RPAREN prodbody','procedure',6,'p_procedure','SyntacticAnalizer.py',65),
  ('prodbody -> LCRLBRACKET line RCRLBRACKET','prodbody',3,'p_prodbody','SyntacticAnalizer.py',70),
  ('function -> FN ID LPAREN params RPAREN funbody','function',6,'p_function','SyntacticAnalizer.py',81),
  ('params -> ID arg','params',2,'p_params','SyntacticAnalizer.py',86),
  ('params -> empty empty','params',2,'p_params','SyntacticAnalizer.py',87),
  ('arg -> COMMA params','arg',2,'p_arg','SyntacticAnalizer.py',98),
  ('arg -> COMMA arg','arg',2,'p_arg','SyntacticAnalizer.py',99),
  ('arg -> empty empty','arg',2,'p_arg','SyntacticAnalizer.py',100),
  ('funbody -> ARROW output LCRLBRACKET line end RCRLBRACKET','funbody',6,'p_funbody','SyntacticAnalizer.py',107),
  ('output -> INTEGER','output',1,'p_output','SyntacticAnalizer.py',113),
  ('output -> BOOLEAN','output',1,'p_output','SyntacticAnalizer.py',114),
  ('end -> RETURN expression SEMICOLON','end',3,'p_end','SyntacticAnalizer.py',120),
  ('loop -> LOOP LCRLBRACKET line RCRLBRACKET','loop',4,'p_loop','SyntacticAnalizer.py',131),
  ('for -> FOR ID IN INT DOTDOT INT LCRLBRACKET line RCRLBRACKET','for',9,'p_for','SyntacticAnalizer.py',146),
  ('while -> WHILE LPAREN expression compare expression RPAREN LCRLBRACKET line RCRLBRACKET','while',9,'p_while','SyntacticAnalizer.py',161),
  ('while -> WHILE TRUE LCRLBRACKET line RCRLBRACKET','while',5,'p_while','SyntacticAnalizer.py',162),
  ('move -> MOVE LPAREN STRING COMMA bool RPAREN SEMICOLON','move',7,'p_move','SyntacticAnalizer.py',177),
  ('moveList -> MOVE LPAREN LSQRBRACKET fingerList RSQRBRACKET COMMA bool RPAREN SEMICOLON','moveList',9,'p_moveList','SyntacticAnalizer.py',185),
  ('fingerList -> STRING COMMA STRING','fingerList',3,'p_fingerList','SyntacticAnalizer.py',193),
  ('fingerList -> STRING COMMA fingerList','fingerList',3,'p_fingerList','SyntacticAnalizer.py',194),
  ('delay -> DELAY LPAREN INT COMMA STRING RPAREN SEMICOLON','delay',7,'p_delay','SyntacticAnalizer.py',208),
  ('unit -> QUOT MIN QUOT','unit',3,'p_unit','SyntacticAnalizer.py',216),
  ('unit -> QUOT MIL QUOT','unit',3,'p_unit','SyntacticAnalizer.py',217),
  ('unit -> QUOT SEG QUOT','unit',3,'p_unit','SyntacticAnalizer.py',218),
  ('println -> PRINT EXPR LPAREN args RPAREN SEMICOLON','println',6,'p_println','SyntacticAnalizer.py',232),
  ('args -> INT body','args',2,'p_args','SyntacticAnalizer.py',244),
  ('args -> ID body','args',2,'p_args','SyntacticAnalizer.py',245),
  ('args -> opera body','args',2,'p_args','SyntacticAnalizer.py',246),
  ('args -> TRUE body','args',2,'p_args','SyntacticAnalizer.py',247),
  ('args -> FALSE body','args',2,'p_args','SyntacticAnalizer.py',248),
  ('args -> STRING body','args',2,'p_args','SyntacticAnalizer.py',249),
  ('body -> COMMA args','body',2,'p_body','SyntacticAnalizer.py',259),
  ('body -> COMMA body','body',2,'p_body','SyntacticAnalizer.py',260),
  ('body -> empty empty','body',2,'p_body','SyntacticAnalizer.py',261),
  ('text -> QUOT ID QUOT','text',3,'p_text','SyntacticAnalizer.py',268),
  ('elseiforelse -> elseif','elseiforelse',1,'p_elseiforelse','SyntacticAnalizer.py',280),
  ('elseiforelse -> else','elseiforelse',1,'p_elseiforelse','SyntacticAnalizer.py',281),
  ('if -> IF expression compare expression LCRLBRACKET line RCRLBRACKET empty','if',8,'p_if','SyntacticAnalizer.py',287),
  ('if -> IF expression compare expression LCRLBRACKET line RCRLBRACKET elseiforelse','if',8,'p_if','SyntacticAnalizer.py',288),
  ('elseif -> ELSEIF expression compare expression LCRLBRACKET line RCRLBRACKET empty','elseif',8,'p_elseif','SyntacticAnalizer.py',303),
  ('elseif -> ELSEIF expression compare expression LCRLBRACKET line RCRLBRACKET elseiforelse','elseif',8,'p_elseif','SyntacticAnalizer.py',304),
  ('else -> ELSE LCRLBRACKET line RCRLBRACKET','else',4,'p_else','SyntacticAnalizer.py',316),
  ('compare -> EQEQ','compare',1,'p_compare','SyntacticAnalizer.py',323),
  ('compare -> LTE','compare',1,'p_compare','SyntacticAnalizer.py',324),
  ('compare -> GTE','compare',1,'p_compare','SyntacticAnalizer.py',325),
  ('compare -> LT','compare',1,'p_compare','SyntacticAnalizer.py',326),
  ('compare -> GT','compare',1,'p_compare','SyntacticAnalizer.py',327),
  ('expression -> INT','expression',1,'p_expressions','SyntacticAnalizer.py',333),
  ('expression -> TRUE','expression',1,'p_expressions','SyntacticAnalizer.py',334),
  ('expression -> FALSE','expression',1,'p_expressions','SyntacticAnalizer.py',335),
  ('expression -> opera','expression',1,'p_expressions','SyntacticAnalizer.py',336),
  ('expression -> ID','expression',1,'p_expressions','SyntacticAnalizer.py',337),
  ('expression -> negative','expression',1,'p_expressions','SyntacticAnalizer.py',338),
  ('let -> LET ID ASSIGN operand SEMICOLON','let',5,'p_let','SyntacticAnalizer.py',351),
  ('let -> LET ID ASSIGN bool SEMICOLON','let',5,'p_let','SyntacticAnalizer.py',352),
  ('opera -> OPERA LPAREN operator COMMA operand COMMA operand RPAREN','opera',8,'p_opera','SyntacticAnalizer.py',368),
  ('operator -> PLUS','operator',1,'p_operators','SyntacticAnalizer.py',376),
  ('operator -> MINUS','operator',1,'p_operators','SyntacticAnalizer.py',377),
  ('operator -> DIVIDE','operator',1,'p_operators','SyntacticAnalizer.py',378),
  ('operator -> ASTR','operator',1,'p_operators','SyntacticAnalizer.py',379),
  ('operator -> TIMES','operator',1,'p_operators','SyntacticAnalizer.py',380),
  ('operand -> INT','operand',1,'p_operand','SyntacticAnalizer.py',387),
  ('operand -> opera','operand',1,'p_operand','SyntacticAnalizer.py',388),
  ('operand -> ID','operand',1,'p_operand','SyntacticAnalizer.py',389),
  ('operand -> negative','operand',1,'p_operand','SyntacticAnalizer.py',390),
  ('negative -> MINUS INT','negative',2,'p_uminus','SyntacticAnalizer.py',396),
  ('bool -> TRUE','bool',1,'p_expression_bool','SyntacticAnalizer.py',402),
  ('bool -> FALSE','bool',1,'p_expression_bool','SyntacticAnalizer.py',403),
  ('bool -> ID','bool',1,'p_expression_bool','SyntacticAnalizer.py',404),
  ('break -> BREAK','break',1,'p_break','SyntacticAnalizer.py',411),
  ('empty -> <empty>','empty',0,'p_empty','SyntacticAnalizer.py',428),
]
